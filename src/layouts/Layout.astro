---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script src="https://unpkg.com/typewriter-effect@latest/dist/core.js"></script>
    <title>{title}</title>
  </head>
  <body class="bg-white dark:bg-slate-800 text-black dark:text-white">
    <div class="absolute top-5 right-10">
      <button id="themeToggle">Toggle</button>
    </div>
    <slot />
  </body>
</html>
<style is:global></style>

<script>
  // on initial load check for localStorage or prefers-color-scheme
  if (
    localStorage.theme === "dark" ||
    (!("theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    document.documentElement.classList.add("dark");
    localStorage.theme = "dark";
  } else {
    document.documentElement.classList.remove("dark");
    localStorage.theme = "light";
  }

  // add eventListener to toggleButton and let user toggle theme and save in local storages
  const themeToggle = document.getElementById("themeToggle");
  themeToggle?.addEventListener("click", () => {
    console.log("this is toggeling");
    if (localStorage.getItem("theme") === "dark") {
      document.documentElement.classList.remove("dark");
      localStorage.theme = "light";
    } else {
      document.documentElement.classList.add("dark");
      localStorage.theme = "dark";
    }
  });
</script>
